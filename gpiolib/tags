!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
GPIO_DIR_IN	gpio.h	6;"	d
GPIO_DIR_OUT	gpio.h	5;"	d
GPIO_HIGH	gpio.h	7;"	d
GPIO_LOW	gpio.h	8;"	d
MAX_PIN_COUNT	gpio.h	10;"	d
P8_10	gpio.h	20;"	d
P8_11	gpio.h	21;"	d
P8_12	gpio.h	22;"	d
P8_13	gpio.h	23;"	d
P8_14	gpio.h	24;"	d
P8_15	gpio.h	25;"	d
P8_16	gpio.h	26;"	d
P8_17	gpio.h	27;"	d
P8_18	gpio.h	28;"	d
P8_19	gpio.h	29;"	d
P8_20	gpio.h	30;"	d
P8_21	gpio.h	31;"	d
P8_22	gpio.h	32;"	d
P8_23	gpio.h	33;"	d
P8_24	gpio.h	34;"	d
P8_25	gpio.h	35;"	d
P8_26	gpio.h	36;"	d
P8_27	gpio.h	37;"	d
P8_28	gpio.h	38;"	d
P8_29	gpio.h	39;"	d
P8_3	gpio.h	13;"	d
P8_30	gpio.h	40;"	d
P8_31	gpio.h	41;"	d
P8_32	gpio.h	42;"	d
P8_33	gpio.h	43;"	d
P8_34	gpio.h	44;"	d
P8_35	gpio.h	45;"	d
P8_36	gpio.h	46;"	d
P8_37	gpio.h	47;"	d
P8_38	gpio.h	48;"	d
P8_39	gpio.h	49;"	d
P8_4	gpio.h	14;"	d
P8_40	gpio.h	50;"	d
P8_41	gpio.h	51;"	d
P8_42	gpio.h	52;"	d
P8_43	gpio.h	53;"	d
P8_44	gpio.h	54;"	d
P8_45	gpio.h	55;"	d
P8_46	gpio.h	56;"	d
P8_5	gpio.h	15;"	d
P8_6	gpio.h	16;"	d
P8_7	gpio.h	17;"	d
P8_8	gpio.h	18;"	d
P8_9	gpio.h	19;"	d
PIN	gpio.h	/^} PIN;$/;"	t	typeref:struct:__anon1
PIN	gpio.h	/^} PIN;$/;"	t	typeref:struct:__anon2
PIN_MODE_DEFAULT	gpio.h	58;"	d
PIN_TABLE	gpio.h	/^static PIN PIN_TABLE[MAX_PIN_COUNT] = $/;"	v
PORT_PIN_LENGTH	gpio.h	11;"	d
chPin	gpio.h	/^    char chPin[5];          \/\/ BBB PIN. e.g. P8.39$/;"	m	struct:__anon1
chPin	gpio.h	/^    char chPin[5];          \/\/ BBB PIN. e.g. P8.39$/;"	m	struct:__anon2
exportPin	gpio.c	/^int exportPin(char *pchPin)$/;"	f
getPin	gpio.c	/^int getPin(char *pchPin)$/;"	f
getPinValue	gpio.c	/^int getPinValue(char *pchPin, int *iValue)$/;"	f
iPin	gpio.h	/^    int iPin;               \/\/ pin = gpio base * 32 + pin number$/;"	m	struct:__anon1
iPin	gpio.h	/^    int iPin;               \/\/ pin = gpio base * 32 + pin number$/;"	m	struct:__anon2
main	ledBlink.c	/^void main(int argc, char **argv)$/;"	f
main	runled.c	/^void main(int argc, char **argv)$/;"	f
main	switch.c	/^void main(int argc, char **argv)$/;"	f
setPinDirection	gpio.c	/^int setPinDirection(char *pchPin, char *pchDir)$/;"	f
setPinMode	gpio.c	/^int setPinMode(char *pchPin, char *pchMode)$/;"	f
setPinValue	gpio.c	/^int setPinValue(char *pchPin, int iValue)$/;"	f
